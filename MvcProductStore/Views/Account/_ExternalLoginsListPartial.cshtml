@model MvcProductStore.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@*<h4>Use another service to log in.</h4>
    <hr />
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if (loginProviders.Count() == 0) {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
        }
        else {
            using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        @foreach (AuthenticationDescription p in loginProviders) {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                        }
                    </p>
                </div>
            }
        }
    }*@


<h4>Use another service to log in.</h4>
<hr />

<div id="socialLoginList">
    <p>
        <button type="submit" class="btn btn-block btn-social btn-facebook" id="facebook" name="provider" value="facebook" title="Log in using your Facebook account">
            <i class="fab fa-facebook"></i> Sign with Facebook
        </button>
    </p>
    <p>
        <button type="submit" class="btn btn-block btn-social btn-google" id="google" name="provider" value="google" title="Log in using Google">
            <i class="fab fa-google"></i> Continue with Google
        </button>
    </p>
</div>